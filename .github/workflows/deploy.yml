# .github/workflows/build.yml
name: Build and Push Docker Image

on:
  push:
    branches: [main]

jobs:
  testing:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE:marketplace_kampsewa
          MYSQL_ROOT_PASSWORD:Kampsewa123!
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=5s --health-timeout=3s --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP with required extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: pdo, pdo_mysql, mbstring, exif, pcntl, bcmath, gd, zip, xml

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies php
        run: |
          composer install --no-interaction

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend assets
        run: |
          npm run build
          cp public/build/.vite/manifest.json public/build

      - name: Copy .env.example to .env
        run: cp .env.example .env

      # - name: Wait for MySQL to be ready
      #   run: |
      #     until mysql -h 127.0.0.1 -u root -pkampsewa_22025! -e "show databases;"; do
      #       echo "Waiting for MySQL to be ready..."
      #       sleep 1
      #     done

      - name: generate key & migrate
        run: |
          php artisan key:generate
          php artisan migrate --force
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: marketplace_kampsewa
          DB_USERNAME: root
          DB_PASSWORD: Kampsewa123!

      - name: Run Laravel Tests
        run: php artisan test || true
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: marketplace_kampsewa
          DB_USERNAME: root
          DB_PASSWORD: Kampsewa123!

  build:
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/kampsewa_2:latest -t ghcr.io/${{ github.repository_owner }}/kampsewa_2:${{ github.run_number }} .

      - name: Push Docker images
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/kampsewa_2:latest
          docker push ghcr.io/${{ github.repository_owner }}/kampsewa_2:${{ github.run_number }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Pull Docker image
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker service update \
            --with-registry-auth \
            --image ghcr.io/${{ github.repository_owner }}/kampsewa_2:${{ github.run_number }} \
          kampsewa_app
